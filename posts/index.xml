<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 둥충코딩</title>
    <link>http://localhost:1313/posts/</link>
    <description>Recent content in Posts on 둥충코딩</description>
    <generator>Hugo</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sat, 26 Jul 2025 00:36:49 +0900</lastBuildDate>
    <atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>블로그에GPT대화넣기</title>
      <link>http://localhost:1313/posts/%EB%B8%94%EB%A1%9C%EA%B7%B8%EC%97%90gpt%EB%8C%80%ED%99%94%EB%84%A3%EA%B8%B0/</link>
      <pubDate>Sat, 26 Jul 2025 00:36:49 +0900</pubDate>
      <guid>http://localhost:1313/posts/%EB%B8%94%EB%A1%9C%EA%B7%B8%EC%97%90gpt%EB%8C%80%ED%99%94%EB%84%A3%EA%B8%B0/</guid>
      <description>&lt;h1 id=&#34;블로그에gpt대화넣기&#34;&gt;블로그에GPT대화넣기&lt;/h1&gt;&#xA;&lt;p&gt;블로그를 정비하면서 문득 GPT와 대화한 내용을 저장하고 싶다는 생각이 들었다.&#xA;그래서 적용하는 과정을 GPT와 대화하면서 시행착오 끝에 적용하는 과정을&#xA;기록한다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-물어보기&#34;&gt;1. 물어보기&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;chatlog&#34;&gt;&#xA;  &lt;p&gt;&lt;div class=&#34;user-bubble&#34;&gt;&lt;strong&gt;User&lt;/strong&gt;. 내가 hugo 블로그를 쓰고 있는데 너와의 대화를 블로그에 남기고 싶어&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;🤖 ChatGPT:&lt;/strong&gt;&lt;br&gt;&#xA;좋아, Hugo 블로그에 너와 나의 대화를 남기려면 몇 가지 방식이 있어. 예쁘게 포맷팅된 대화 형태로 남기고 싶다면 &lt;strong&gt;마크다운(Markdown)&lt;/strong&gt; 과 함께 &lt;strong&gt;CSS&lt;/strong&gt; 또는 &lt;strong&gt;Hugo의 shortcode&lt;/strong&gt;를 활용하는 게 좋아.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-1-대화-내용-마크다운-예시&#34;&gt;✅ 1. 대화 내용 마크다운 예시&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;## 🤖 ChatGPT와의 대화 기록&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;**&lt;/span&gt;🙋 사용자:** Hugo 블로그를 쓰고 있는데 너와의 대화를 블로그에 남기고 싶어  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;**&lt;/span&gt;🤖 ChatGPT:** 좋아, Hugo 블로그에 너와 나의 대화를 남기려면 몇 가지 방식이 있어. 예쁘게 포맷팅된 대화 형태로 남기고 싶다면 **마크다운(Markdown)** 과 함께 **CSS** 또는 **Hugo의 shortcode**를 활용하는 게 좋아.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-2-말풍선-형태로-꾸미기&#34;&gt;✅ 2. 말풍선 형태로 꾸미기&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;style&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;chat&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#cf222e&#34;&gt;display&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;flex&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#cf222e&#34;&gt;flex-direction&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;column&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#cf222e&#34;&gt;gap&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;0.5&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;rem&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;user-msg&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;bot-msg&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#cf222e&#34;&gt;max-width&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;80&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#cf222e&#34;&gt;padding&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;0.7&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;em&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;em&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#cf222e&#34;&gt;border-radius&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;em&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;user-msg&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#cf222e&#34;&gt;align-self&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;flex-end&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#cf222e&#34;&gt;background&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;#d0f0fd&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;bot-msg&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#cf222e&#34;&gt;align-self&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;flex-start&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#cf222e&#34;&gt;background&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;#f0f0f0&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;style&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;chat&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;user-msg&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;Hugo 블로그를 쓰고 있는데 너와의 대화를 블로그에 남기고 싶어&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;bot-msg&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;좋아, Hugo 블로그에 너와 나의 대화를 남기려면...&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;💡 Goldmark에서 HTML을 허용하려면 &lt;code&gt;config.toml&lt;/code&gt;에 다음을 추가해야 해:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Markdown업무레포</title>
      <link>http://localhost:1313/posts/markdown%EC%97%85%EB%AC%B4%EB%A0%88%ED%8F%AC/</link>
      <pubDate>Wed, 19 Mar 2025 22:01:39 +0900</pubDate>
      <guid>http://localhost:1313/posts/markdown%EC%97%85%EB%AC%B4%EB%A0%88%ED%8F%AC/</guid>
      <description>&lt;h1 id=&#34;markdown업무레포&#34;&gt;Markdown업무레포&lt;/h1&gt;&#xA;&lt;p&gt;마크다운은 가벼운 마크업 언어로서 간단한 문법으로 문서를 만들어낼수 있다.&#xA;회사에서는 주류로 쓰이지는 않지만 보고용 문서를 제외하고 간단하게&#xA;업무 및 개발내용을 적는 기술문서나 간단한 메모등에 매우 편리하다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Gitlab&lt;/li&gt;&#xA;&lt;li&gt;Mermaidjs&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;gitlab-을-사용하여-업무레포-공유&#34;&gt;Gitlab 을 사용하여 업무레포 공유&lt;/h2&gt;&#xA;&lt;p&gt;회사에서 일부 프로그램 배포를 위해 Gitlab이 도입되어 있는데&#xA;이때 업무용으로 레포를 부탁하여 생성했다.&lt;/p&gt;&#xA;&lt;p&gt;이 레포는 Markdown 문서가 대부분이고 때론 Txt파일 또는 업무외 별도 개발 소스를 관리한다.&lt;/p&gt;&#xA;&lt;h3 id=&#34;git브랜치&#34;&gt;Git브랜치&lt;/h3&gt;&#xA;&lt;p&gt;몇명 되지는 않지만 여러사람이 한 레포를 공유한다.&#xA;하지만 이는 단지 업무문서를 관리하는 것이므로 거창한 브랜치 전략이 필요없다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>대체거래소후기</title>
      <link>http://localhost:1313/posts/%EB%8C%80%EC%B2%B4%EA%B1%B0%EB%9E%98%EC%86%8C%ED%9B%84%EA%B8%B0/</link>
      <pubDate>Sun, 09 Mar 2025 19:50:38 +0900</pubDate>
      <guid>http://localhost:1313/posts/%EB%8C%80%EC%B2%B4%EA%B1%B0%EB%9E%98%EC%86%8C%ED%9B%84%EA%B8%B0/</guid>
      <description>&lt;h1 id=&#34;대체거래소후기&#34;&gt;대체거래소후기&lt;/h1&gt;&#xA;&lt;p&gt;나는 증권사 IT 매매팀에 꽤 오래있었다. 여태까지 내가 작성한 코드들이 이제 거의 모든 로직에 들어가 있다.&lt;/p&gt;&#xA;&lt;p&gt;작년부터 대체거래소 NXT 적용하기 위해  역대급으로 바쁜 프로젝트를 얼마전 끝냈다.&#xA;시스템을 깊이 아는 상태였어도 이 프로젝트를 진행하는게 상당히 힘들었기 때문에 굉장히 인상적이였다.&#xA;그래서 후기를 남기고자 한다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;sor&#34;&gt;SOR&lt;/h2&gt;&#xA;&lt;p&gt;NXT 거래소가 생기면서 특이하게  SOR주문이 생겼다. 각 증권사가 해야할 일은 고객에게 최대한 유리하도록 주문집행 하는 시스템을 갖추는 것이다.&#xA;상황에 따라 KRX, NXT 양 거래소로 분할되거나 둘 중 하나를 선택하여 주식주문을 집행하게 된다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dustscrap</title>
      <link>http://localhost:1313/posts/dustscrap/</link>
      <pubDate>Sat, 11 Feb 2023 18:36:21 +0900</pubDate>
      <guid>http://localhost:1313/posts/dustscrap/</guid>
      <description>&lt;h1 id=&#34;dustscrap&#34;&gt;Dustscrap&lt;/h1&gt;&#xA;&lt;p&gt;미세먼지의 확산을 영상으로 보기 위해서 &lt;a href=&#34;https://earth.nullschool.net/&#34;&gt;어스널스쿨&lt;/a&gt;&#xA;을 시간별로 캡쳐하여 영상으로 만드는 프로그램을 개발 했다.&lt;/p&gt;&#xA;&lt;p&gt;레포는 &lt;a href=&#34;https://github.com/doongchoong/dustscrap&#34;&gt;https://github.com/doongchoong/dustscrap&lt;/a&gt;&#xA;이다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/doongchoong/dustscrap/raw/main/dust.gif?raw=true&#34; alt=&#34;cosc-gif&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;url-분석&#34;&gt;URL 분석&lt;/h2&gt;&#xA;&lt;p&gt;어스널스쿨은 굉장히 URL 설계가 잘 되어 있다.&#xA;과거 특정 시점의 상황을 보고싶을때&#xA;열어보면 URL이 다음과 같이 보인다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;site: https://earth.nullschool.net/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;time: #2023/02/11/0800Z/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mode: particulates/surface/level/anim=off/overlay=pm2.5/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;view: orthographic=-229.43,42.28,546&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;시간은 1시간 단위이며 모드는 미세먼지를 PM2.5나 PM10으로 바꿀때 혹은 COSC 등으로 바꿀때마다 해당 정보에 따라 변경되는 값이다. 뷰는 지도를 보는 방식인데 기본값인 Orthographic 모드가 지구본을 보는것과 같은 뷰로 보게 된다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python소스설치</title>
      <link>http://localhost:1313/posts/python%EC%86%8C%EC%8A%A4%EC%84%A4%EC%B9%98/</link>
      <pubDate>Sat, 14 Aug 2021 15:47:59 +0900</pubDate>
      <guid>http://localhost:1313/posts/python%EC%86%8C%EC%8A%A4%EC%84%A4%EC%B9%98/</guid>
      <description>&lt;h1 id=&#34;python-소스-설치&#34;&gt;Python 소스 설치&lt;/h1&gt;&#xA;&lt;p&gt;보안이 엄격한 회사에서는 물리적으로 서버망이 분리되어 있을 수도 있다.&#xA;가벼운 목적에서 스크립트 언어를 설치하려고 해도 제약사항이 참 많다.&#xA;특히 설치 패키지가 지원하지 않는 유닉스류 등을 사용하게 되면&#xA;소스 설치가 필요하다. 하지만 생각보다 어렵지 않고 쉬운편이다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-설치순서&#34;&gt;1. 설치순서&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.python.org/downloads/source/&#34;&gt;설치소스는 여기서 받는다.&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;configure 를 통해서 환경에 맞게 옵션을 주어 실행&lt;/li&gt;&#xA;&lt;li&gt;Makefile이 생성됨.&lt;/li&gt;&#xA;&lt;li&gt;Makefile을 살펴보면서 다시 빌드환경 점검&lt;/li&gt;&#xA;&lt;li&gt;make, make install&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;2-고려할-사항들&#34;&gt;2. 고려할 사항들&lt;/h2&gt;&#xA;&lt;h3 id=&#34;21-64비트-시스템&#34;&gt;2.1 64비트 시스템&lt;/h3&gt;&#xA;&lt;p&gt;64비트로 같이 맞추는게 좋다. AIX 류라면&lt;/p&gt;</description>
    </item>
    <item>
      <title>Curses</title>
      <link>http://localhost:1313/posts/curses/</link>
      <pubDate>Sat, 29 May 2021 20:53:40 +0900</pubDate>
      <guid>http://localhost:1313/posts/curses/</guid>
      <description>&lt;h1 id=&#34;curses&#34;&gt;Curses&lt;/h1&gt;&#xA;&lt;p&gt;curses란 유닉스 계열 운영체제에서 터미널 환경 제어하는 라이브러리를 말한다.&#xA;본인이 &lt;a href=&#34;https://github.com/doongchoong/fzc&#34;&gt;fzc&lt;/a&gt;를 만드는 데 사용하였다.&#xA;기본적인 사용법은 간단히 검색을 하면 나오는데 그 외 좀 검색하기 어려웠던&#xA;내용을 적어보고자 한다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;검색하기-힘들었던-내용&#34;&gt;검색하기 힘들었던 내용&lt;/h2&gt;&#xA;&lt;h3 id=&#34;표준출력과-혼용하여-사용하기&#34;&gt;표준출력과 혼용하여 사용하기&lt;/h3&gt;&#xA;&lt;p&gt;Curses는 기본적인 방식으로 로직을 구성하면&#xA;표준입출력을 사용하기 때문에 표준출력을 별도의 용도로 사용하기 어렵다.&#xA;&lt;a href=&#34;https://github.com/doongchoong/fzc&#34;&gt;fzc&lt;/a&gt;를 만드는데 화면의 내용은 퍼지검색 리스트 표출이지만&#xA;파일을 선택하고 나서는 표준출력으로 선택한 파일 내용을 표출해야했기 때문에&#xA;필요했다. 이는 많은 검색을 통해&#xA;initscr을 호출하는 대신 new term을 구성하는 방식을 사용하면 되는 내용을 찾았다.&#xA;&lt;a href=&#34;https://stackoverflow.com/questions/8371877/ncurses-and-linux-pipeline&#34;&gt;검색한 Stackoverflow 내용&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>퍼지검색</title>
      <link>http://localhost:1313/posts/%ED%8D%BC%EC%A7%80%EA%B2%80%EC%83%89/</link>
      <pubDate>Mon, 10 May 2021 23:35:07 +0900</pubDate>
      <guid>http://localhost:1313/posts/%ED%8D%BC%EC%A7%80%EA%B2%80%EC%83%89/</guid>
      <description>&lt;h1 id=&#34;퍼지-검색&#34;&gt;퍼지 검색&lt;/h1&gt;&#xA;&lt;p&gt;Fuzzy-search 검색어가 정확하지 않아도 유사한 항목을 찾아주는 검색 방식이다.&#xA;유전정보를 활용하는 생물학 분야 혹은 문자열 검색&#xA;등 여러 분야에 쓰이는데&#xA;이중 파일명을 검색하거나 함수 메서드등을 검색하는&#xA;기능이 아주 유용해 보인다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;사례&#34;&gt;사례&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sublimetext.com/&#34;&gt;Sublime Text&lt;/a&gt;의&#xA;검색 기능을 들수 있다.&#xA;그리고 이 기능에 대해 궁금한 사람이 있었던 모양이다.&#xA;이런 &lt;a href=&#34;https://www.forrestthewoods.com/blog/reverse_engineering_sublime_texts_fuzzy_match/&#34;&gt;Article&lt;/a&gt;&#xA;이 있다.&#xA;그리고 최근에 발견한 툴인데 &lt;a href=&#34;https://github.com/junegunn/fzf&#34;&gt;fzf&lt;/a&gt;&#xA;라는 fuzzy-finder 가 있다.&#xA;아주 훌륭한 tool이고 정말 멋지다.&#xA;이 프로그램은 자기가 필요한 일만 멋지고 충분하게 딱 해내고 Cool하게 끝낸다. 정말 대단한 프로그램이다. 이건 한국사람이 만들었다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>M2평탄화</title>
      <link>http://localhost:1313/posts/m2%ED%8F%89%ED%83%84%ED%99%94/</link>
      <pubDate>Tue, 04 May 2021 21:34:32 +0900</pubDate>
      <guid>http://localhost:1313/posts/m2%ED%8F%89%ED%83%84%ED%99%94/</guid>
      <description>&lt;h1 id=&#34;m2-평탄화&#34;&gt;M2 평탄화&lt;/h1&gt;&#xA;&lt;p&gt;이 페이지에서 말하는 M2란 광의통화를 의미한다.&#xA;작년 2020년 코로나가 전세계로 급속도로 번지면서 경제가 급격히 얼어붙었다.&#xA;그래서 2020년 3월 미국의 FED에서 돈을 엄청나게 많이 뿌리며&#xA;금융 충격에 대비하였고 이에 대부분의 자산은 급격한 반등을 이루게 되었다.&lt;/p&gt;&#xA;&lt;p&gt;이 과정에서 M2 통화량 증가분을 제거하면 어느정도 수준으로 반등이 이루어졌는지&#xA;파악해볼수 있지 않을까? 하는 아이디어에서 M2 영향도를 제거하는&#xA;차트를 그려보는 간단한 개발을 하였다. 이는 작년 9~10월 정도에&#xA;python으로 개발하였다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://doongchoong.github.io/m2flat/index.html&#34;&gt;M2flat Demo&lt;/a&gt;사이트&lt;/p&gt;&#xA;&lt;h2 id=&#34;데이터-수집하기&#34;&gt;데이터 수집하기&lt;/h2&gt;&#xA;&lt;p&gt;먼저 데이터가 필요한데 구할 데이터는 명확하다. M2, 그리고 각 지수 데이터이다.&#xA;M2는 &lt;a href=&#34;https://fred.stlouisfed.org&#34;&gt;FRED&lt;/a&gt; 사이트에서&#xA;지수데이터는 &lt;a href=&#34;https://finance.yahoo.com/&#34;&gt;Yahoo finance&lt;/a&gt;에서 구한다.&#xA;CSV형태로 바로 다운받을 수 있게 제공하고 있다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>만델브로트프랙탈</title>
      <link>http://localhost:1313/posts/%EB%A7%8C%EB%8D%B8%EB%B8%8C%EB%A1%9C%ED%8A%B8%ED%94%84%EB%9E%99%ED%83%88/</link>
      <pubDate>Mon, 03 May 2021 19:50:38 +0900</pubDate>
      <guid>http://localhost:1313/posts/%EB%A7%8C%EB%8D%B8%EB%B8%8C%EB%A1%9C%ED%8A%B8%ED%94%84%EB%9E%99%ED%83%88/</guid>
      <description>&lt;h1 id=&#34;만델브로트-프랙탈&#34;&gt;만델브로트 프랙탈&lt;/h1&gt;&#xA;&lt;p&gt;프랙탈은 자기유사성으로 알려져있는 일부 조각이 전부를 구성하는 모양이 되는 기하학적 구조를 뜻한다.&#xA;그중 만델브로트 집합은 풍뎅이인 특유의 모양으로 잘 알려져 있다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://doongchoong.github.io/toys/mandel.html&#34;&gt;WEBGL로 구현&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;정의&#34;&gt;정의&lt;/h2&gt;&#xA;&lt;p&gt;정의된 수열이 발산하지 않는 성질을 갖도록 하는 복수수 c의 집합으로&#xA;정의된다.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;Z0 = 0&#xA;Zn+1 = Zn^2 + c&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;실제로-그리는-방법&#34;&gt;실제로 그리는 방법&lt;/h2&gt;&#xA;&lt;p&gt;사실 이렇게만 써놓으면 잘 감이 오지 않는다.&#xA;이를 실수부 , 허수부로 나눈다.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(X0, Y0) = (0, 0)&#xA;Xn+1 = Xn^2 - Yn^2 + a&#xA;Yn+1 = 2 * Xn * Yn + b&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;이것을 X축은 가로 Y축은 세로로 그대로 대입한다.&#xA;위 점화식 계산하면서 수열이 발산하는지 아닌지 검사한다.&#xA;이때 절대값이 2보다 크다면  Xn^2 + Yn^2 &amp;gt; 2^2&#xA;그러면 발산한다고 할수 있으며 연속해서 계산을 하다가&#xA;처음으로 벗어나는 순간 카운트를 세고&#xA;해당 카운트를 기반으로 색상을 칠한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chocolatey</title>
      <link>http://localhost:1313/posts/chocolatey/</link>
      <pubDate>Sun, 02 May 2021 23:30:18 +0900</pubDate>
      <guid>http://localhost:1313/posts/chocolatey/</guid>
      <description>&lt;h1 id=&#34;chocolatey-사용&#34;&gt;Chocolatey 사용&lt;/h1&gt;&#xA;&lt;p&gt;윈도우에서 &lt;a href=&#34;https://chocolatey.org/&#34;&gt;chocolatey&lt;/a&gt; 우분투의 apt, 아치의 pacman 와 같이 패키지를 관리해주는 시스템이다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;패키지-검색&#34;&gt;패키지 검색&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ choco search git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chocolatey v0.10.15&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git 2.31.1 &lt;span style=&#34;color:#0550ae&#34;&gt;[&lt;/span&gt;Approved&lt;span style=&#34;color:#0550ae&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;179&lt;/span&gt; packages found.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;패키지-설치&#34;&gt;패키지 설치&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ choco install joplin&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Installing the following packages:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;joplin&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;By installing you accept licenses &lt;span style=&#34;color:#cf222e&#34;&gt;for&lt;/span&gt; the packages.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;joplin v1.7.11 already installed.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Use --force to reinstall, specify a version to install, or try upgrade.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chocolatey installed 0/1 packages.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; See the log &lt;span style=&#34;color:#cf222e&#34;&gt;for&lt;/span&gt; details &lt;span style=&#34;color:#0550ae&#34;&gt;(&lt;/span&gt;C:&lt;span style=&#34;color:#0a3069&#34;&gt;\P&lt;/span&gt;rogramData&lt;span style=&#34;color:#0a3069&#34;&gt;\c&lt;/span&gt;hocolatey&lt;span style=&#34;color:#0a3069&#34;&gt;\l&lt;/span&gt;ogs&lt;span style=&#34;color:#0a3069&#34;&gt;\c&lt;/span&gt;hocolatey.log&lt;span style=&#34;color:#0550ae&#34;&gt;)&lt;/span&gt;.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Warnings:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; - joplin - joplin v1.7.11 already installed.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Use --force to reinstall, specify a version to install, or try upgrade.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;패키지-정보보기&#34;&gt;패키지 정보보기&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ choco info googlechrome&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Installing the following packages:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;joplin&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;By installing you accept licenses &lt;span style=&#34;color:#cf222e&#34;&gt;for&lt;/span&gt; the packages.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;joplin v1.7.11 already installed.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Use --force to reinstall, specify a version to install, or try upgrade.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chocolatey installed 0/1 packages.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; See the log &lt;span style=&#34;color:#cf222e&#34;&gt;for&lt;/span&gt; details &lt;span style=&#34;color:#0550ae&#34;&gt;(&lt;/span&gt;C:&lt;span style=&#34;color:#0a3069&#34;&gt;\P&lt;/span&gt;rogramData&lt;span style=&#34;color:#0a3069&#34;&gt;\c&lt;/span&gt;hocolatey&lt;span style=&#34;color:#0a3069&#34;&gt;\l&lt;/span&gt;ogs&lt;span style=&#34;color:#0a3069&#34;&gt;\c&lt;/span&gt;hocolatey.log&lt;span style=&#34;color:#0550ae&#34;&gt;)&lt;/span&gt;.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Warnings:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; - joplin - joplin v1.7.11 already installed.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Use --force to reinstall, specify a version to install, or try upgrade.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;그-외-명령들&#34;&gt;그 외 명령들&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ choco uninstall 패키지  삭제&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;설치된 패키지 검색&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ choco search -l   &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chocolatey v0.10.15&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chocolatey 0.10.15&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cmake 3.20.1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cmake.install 3.20.1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo 0.82.1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;joplin 1.7.11&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;5&lt;/span&gt; packages installed.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ choco upgrade 패키지&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>yyjson분석</title>
      <link>http://localhost:1313/posts/yyjson%EB%B6%84%EC%84%9D/</link>
      <pubDate>Sun, 02 May 2021 17:44:40 +0900</pubDate>
      <guid>http://localhost:1313/posts/yyjson%EB%B6%84%EC%84%9D/</guid>
      <description>&lt;h1 id=&#34;yyjson-분석&#34;&gt;yyjson 분석&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ibireme/yyjson&#34;&gt;yyjson&lt;/a&gt;은&#xA;현존하는 JSON 파서중 가장 빠르다고 알려져 있는 라이브러리이다.&#xA;이 소스코드를 살펴보면서 유용한 것들과 공부할 만한 것 들을 메모한다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;단-두개-파일&#34;&gt;단 두개 파일&lt;/h2&gt;&#xA;&lt;p&gt;yyjson.c , yyjson.h 단 두개 파일만 제공하여&#xA;각 프로젝트에 쉽게 빌드할 수 있도록 하였다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;cpu-최적화&#34;&gt;CPU 최적화&lt;/h2&gt;&#xA;&lt;p&gt;json 과 같은 텍스트 분석이 필요로 하는 것은&#xA;많은 선후 상태 의존성을 필요로 한다. 따라서 병렬로 수행하기 힘들며&#xA;수많은 분기가 존재하여 머신의 성능을 이끌어내기 어려운&#xA;분야 중 하나. 따라서 yyjson이 어떤 최적화들을 하였는지&#xA;유용한 트릭들을 확인하도록 한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>비트연산</title>
      <link>http://localhost:1313/posts/%EB%B9%84%ED%8A%B8%EC%97%B0%EC%82%B0/</link>
      <pubDate>Sun, 02 May 2021 17:02:31 +0900</pubDate>
      <guid>http://localhost:1313/posts/%EB%B9%84%ED%8A%B8%EC%97%B0%EC%82%B0/</guid>
      <description>&lt;h1 id=&#34;비트연산&#34;&gt;비트연산&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://graphics.stanford.edu/~seander/bithacks.html&#34;&gt;Bit Twiddling Hacks&lt;/a&gt;&#xA;에서 정리되어 있는 비트 관련 내용&#xA;몇 가지 감명 받거나 유용해보이는 것 위주로 정리&lt;/p&gt;&#xA;&lt;h2 id=&#34;바이트-관련&#34;&gt;바이트 관련&lt;/h2&gt;&#xA;&lt;h3 id=&#34;워드에-0인-바이트가-있는지-확인하기&#34;&gt;워드에 0인 바이트가 있는지 확인하기&lt;/h3&gt;&#xA;&lt;p&gt;워드는 프로세서가 기본적으로 처리할수 있는 단위를 말하며&#xA;이 문서에선 4bytes를 의미한다. 4bytes 내에 0바이트가 존재하는지 확인하는&#xA;것으로서 이를 활용하면&#xA;strlen 등을 최적화할 수 있다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#57606a&#34;&gt;#define haszero(v) (((v)-0x01010101UL) &amp;amp; ~ (v) &amp;amp; 0x80808080UL)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이 매크로를 사용하면 0인 바이트가 있을때 해당바이트 최상위 비트가&#xA;1로 세팅된다.&lt;br&gt;&#xA;리틀엔디언 세번째바이트가 0일 경우 0x800000&#xA;첫번째 바이트가 0일 경우 0x80  이런 식으로 결과가 나오게 된다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Use_hugo</title>
      <link>http://localhost:1313/posts/use_hugo/</link>
      <pubDate>Sun, 02 May 2021 15:18:39 +0900</pubDate>
      <guid>http://localhost:1313/posts/use_hugo/</guid>
      <description>&lt;h1 id=&#34;휴고-사용하기&#34;&gt;휴고 사용하기&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34;&gt;Gohugo&lt;/a&gt; 는 정적 웹페이지를 생성하는 툴이다.&#xA;이를 이용하여 Github에 블로그를 구축하는 것을 보고&#xA;이 블로그도 hugo로 만들어보기로 하였다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;설치하기&#34;&gt;설치하기&lt;/h2&gt;&#xA;&lt;p&gt;Hugo Installing 을 참조하여 설치한다.&#xA;바이너리를 받아서 설치후 환경변수에 등록하면 된다.&#xA;혹은 Chocolately 를 사용 패키지 설치한다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ choco search hugo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;사이트-생성하기&#34;&gt;사이트 생성하기&lt;/h2&gt;&#xA;&lt;p&gt;사이트(블로그)를 구성하고자 하는 폴더에 가서 아래 명령을 수행한다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hugo new site blog&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;나는 블로그를 만들고자 했기때문에 blog 폴더에 각종&#xA;폴더 및 파일들이 생성된다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>들로네삼각화</title>
      <link>http://localhost:1313/posts/%EB%93%A4%EB%A1%9C%EB%84%A4%EC%82%BC%EA%B0%81%ED%99%94/</link>
      <pubDate>Sat, 30 Nov 2013 19:28:38 +0900</pubDate>
      <guid>http://localhost:1313/posts/%EB%93%A4%EB%A1%9C%EB%84%A4%EC%82%BC%EA%B0%81%ED%99%94/</guid>
      <description>&lt;p&gt;이전블로그 내용 백업&lt;/p&gt;&#xA;&lt;p&gt;들로네 삼각형은 평면위의 점들을 삼각형으로 분할했을때 모든 내각의 합이 최소가 되도록 하는 분할을 말한다. 이에 대한 응용은 여러가지가 있을 것이다. 이는 &lt;a href=&#34;http://en.wikipedia.org/wiki/Delaunay_triangulation&#34;&gt;들로네삼각형&lt;/a&gt;를 참조하면 응용에 대해서 자세히 나온다.&lt;/p&gt;&#xA;&lt;p&gt;이를 자바스크립트로 구현하고자 한다. 참고한 알고리즘은 O(n^2)로 동작하는 알고리즘으로서 세점의 외접원을 이용하는 알고리즘이다. 실제로는 O(n log n) 시간복잡도인 알고리즘도 나와있지만 incremental 방식의 한 종류로서 시각화하기 적당한 알고리즘으로 선택하였다.&lt;/p&gt;&#xA;&lt;p&gt;간단하게 알고리즘을 기술하면&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;임의의 점을 기준으로 최소 길이를 지닌 Edge 하나를 찾는다.&lt;/li&gt;&#xA;&lt;li&gt;선택한 Edge를  CE(후보Edge집합)에 넣는다.&lt;/li&gt;&#xA;&lt;li&gt;CE에서 Edge 하나를 꺼내 선택한다. 비어있다면 알고리즘 종료&lt;/li&gt;&#xA;&lt;li&gt;CCW(시계반대방향조건) 만족하는 점 하나를 선택하여 임의의 삼각형을 만든다.&lt;/li&gt;&#xA;&lt;li&gt;삼각형의 외접원을 구한다.&lt;/li&gt;&#xA;&lt;li&gt;CCW를 만족하는 다른 점이 원 속에 포함되는지 검사한다. 포함된다면 4번으로 돌아간다.&lt;/li&gt;&#xA;&lt;li&gt;마지막으로 선택된 점과 선택된Edge의 두점을 잇는 새로운 네개의  Edge가 있다 (시계방향, 시계반대방향)&lt;/li&gt;&#xA;&lt;li&gt;시계방향의 Edge들은 CE에 넣고 시계반대방향의 Edge들은 DE(완료Edge집합)에 넣는다. 그리고 선택한 Edge도 DE에 넣는다.&lt;/li&gt;&#xA;&lt;li&gt;선택된 점이 없다면 3번으로 돌아간다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;즉 외접원이 핵심인데 어떠한 점도 외접원안에 포함되지 않는다면 그것이 바로 내각이 최소화 되는 모양일 것이다. DE(완료Edge집합) 가 완성된 들로네 삼각화 그래프이다. 아래는 완성된 모습이다. HTML5 의 canvas tag를 이용하여 만들었다. 보이지 않는다면 크롬 브라우져로 보면 된다. 모든소스는 직접 작성하였으며 풀소스가 궁금하면 소스보기로 보면된다. 라이센스는 따로 표시되어 있지 않으나 MIT License&lt;/p&gt;</description>
    </item>
    <item>
      <title>기하브라운주가모형</title>
      <link>http://localhost:1313/posts/%EA%B8%B0%ED%95%98%EB%B8%8C%EB%9D%BC%EC%9A%B4%EC%A3%BC%EA%B0%80%EB%AA%A8%ED%98%95/</link>
      <pubDate>Wed, 09 Oct 2013 00:15:54 +0900</pubDate>
      <guid>http://localhost:1313/posts/%EA%B8%B0%ED%95%98%EB%B8%8C%EB%9D%BC%EC%9A%B4%EC%A3%BC%EA%B0%80%EB%AA%A8%ED%98%95/</guid>
      <description>&lt;canvas id=&#34;stock_path&#34; width=&#34;660&#34; height=&#34;420&#34;&gt;&lt;/canvas&gt;&#xA;&lt;script&gt;&#xA;&#x9;var ASSA_Chart2 = {&#xA;&#xA;&#x9;&#x9;themes : { //DONE&#xA;&#x9;&#x9;&#x9;&#39;background&#39;  : &#39;#000000&#39;,&#xA;&#x9;&#x9;&#x9;&#39;up&#39;          : &#39;rgba(255,220,220,0.3)&#39;,&#xA;&#x9;&#x9;&#x9;&#39;down&#39;        : &#39;rgba(220,220,255,0.3)&#39;,&#xA;&#x9;&#x9;&#x9;&#39;up-shadow&#39;   : &#39;rgba(255,0,0,1.0)&#39;,&#xA;&#x9;&#x9;&#x9;&#39;down-shadow&#39; : &#39;rgba(0,0,255,1.0)&#39;,&#xA;&#x9;&#x9;&#x9;&#39;grid-line&#39;   : &#39;rgba(255,255,255,0.8)&#39;&#xA;&#x9;&#x9;},&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;series : {&#xA;&#xA;&#x9;&#x9;&#x9;grid : {&#xA;&#x9;&#x9;&#x9;&#x9;highest: 0,&#xA;&#x9;&#x9;&#x9;&#x9;lowest : 0,&#xA;&#x9;&#x9;&#x9;&#x9;multiply: 1,&#xA;&#x9;&#x9;&#x9;&#x9;base_dt: new Array(2000)&#xA;&#x9;&#x9;&#x9;},&#xA;&#x9;&#x9;&#x9;// 정규 스케일(0.0 ~ 1.0) 변환된 시계열 캔들가격 데이터&#xA;&#x9;&#x9;&#x9;// EX)&#xA;&#x9;&#x9;&#x9;// {&#xA;&#x9;&#x9;&#x9;// &#x9;&#x9;lx: 0.7123, // x coord&#xA;&#x9;&#x9;&#x9;// &#x9;&#x9;rx: 0.7123, // x coord&#xA;&#x9;&#x9;&#x9;// &#x9;&#x9;oy: 0.1123, // y coord (open  price) &#xA;&#x9;&#x9;&#x9;// &#x9;&#x9;hy: 0.1123, // y coord (high  price) &#xA;&#x9;&#x9;&#x9;// &#x9;&#x9;ly: 0.1123, // y coord (low   price) &#xA;&#x9;&#x9;&#x9;// &#x9;&#x9;cy: 0.1123, // y coord (close price) &#xA;&#x9;&#x9;&#x9;// }&#xA;&#x9;&#x9;&#x9;price: new Array(2000),&#xA;&#xA;&#x9;&#x9;&#x9;// 거래량 레벨 &#xA;&#x9;&#x9;&#x9;volume: new Array(2000),&#xA;&#xA;&#x9;&#x9;&#x9;// 그외 용도에 따라 &#xA;&#xA;&#x9;&#x9;},&#xA;&#xA;&#x9;&#x9;// 레이아웃 지정&#xA;&#x9;&#x9;layouts : [],&#xA;&#xA;&#xA;&#x9;&#x9;// 초기화하면서 캔버스엘리먼트를 반환한다&#xA;&#x9;&#x9;init : function(elem, width, height){&#xA;&#x9;&#x9;&#x9;this._canvas = elem || document.createElement(&#39;canvas&#39;);&#xA;&#x9;&#x9;&#x9;this._canvas.width = width || 960;&#xA;&#x9;&#x9;&#x9;this._canvas.height = height || 480;&#xA;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;// 캔들 차트 영역&#xA;&#x9;&#x9;&#x9;if(this.layouts.length &gt; 0){&#xA;&#x9;&#x9;&#x9;&#x9;// pass&#xA;&#x9;&#x9;&#x9;}else{&#xA;&#x9;&#x9;&#x9;&#x9;this.layouts.push({&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;x: this._canvas.width * 0.1,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;y: this._canvas.height * 0.1,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;w: this._canvas.width * 0.8,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;h: this._canvas.height * 0.8&#xA;&#x9;&#x9;&#x9;&#x9;});&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;return this._canvas;&#xA;&#x9;&#x9;},&#xA;&#xA;&#x9;&#x9;// 차트 렌더링&#xA;&#x9;&#x9;render : function(dat, s, e){ // s : start index, e : end index&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;// 데이터 로드 프로그램 실행&#xA;&#x9;&#x9;&#x9;for(var i=0; i &lt; this.load_programs.length; i++){&#xA;&#x9;&#x9;&#x9;&#x9;var program = this.load_programs[i];&#xA;&#x9;&#x9;&#x9;&#x9;program(this.series, s, e, dat); // run program&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;var ctx = this._canvas.getContext(&#39;2d&#39;);&#xA;&#x9;&#x9;&#x9;// 차트 클리어&#xA;&#x9;&#x9;&#x9;//this._canvas.width = this._canvas.width;&#xA;&#x9;&#x9;&#x9;ctx.fillStyle = this.themes[&#39;background&#39;];&#xA;&#x9;&#x9;&#x9;ctx.fillRect(0,0,this._canvas.width, this._canvas.height);&#xA;&#xA;&#x9;&#x9;&#x9;// 렌더 프로그램 실행&#xA;&#x9;&#x9;&#x9;for(var i=0; i &lt; this.render_programs.length; i++){&#xA;&#x9;&#x9;&#x9;&#x9;var program = this.render_programs[i];&#xA;&#x9;&#x9;&#x9;&#x9;program( this.series, s, e, this.themes, this.layouts, ctx);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;},&#xA;&#xA;&#x9;&#x9;// 데이터를 로드하는 프로그램 등록 순차적으로 실행된다.&#xA;&#x9;&#x9;load_programs: [&#xA;&#x9;&#x9;&#x9;// 그리드 로더&#xA;&#x9;&#x9;&#x9;function(serieses, s, e, dat){&#xA;&#x9;&#x9;&#x9;&#x9;//console.log(&#39;assa_chart2 [LOAD] : grid&#39;);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;// 데이터중에서 가장 높은 가격, 낮은가격을 찾는다.&#xA;&#x9;&#x9;&#x9;&#x9;var highest = -999999999999999;&#xA;&#x9;&#x9;&#x9;&#x9;var lowest = 999999999999999;&#xA;&#x9;&#x9;&#x9;&#x9;for(var i=s; i &lt; dat.length &amp;&amp; i &lt; e ; i++){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(highest &lt; dat[i].high){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;highest = dat[i].high;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(lowest &gt; dat[i].low){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;lowest = dat[i].low;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;// 가능한 정배율의 간격으로 최대 최소 값을 재조정&#xA;&#x9;&#x9;&#x9;&#x9;var r_highest = highest, r_lowest = lowest, r_multiply, multiply = 1;&#xA;&#x9;&#x9;&#x9;&#x9;while(parseInt((highest - lowest) / 5)){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;r_highest = highest;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;r_lowest  = lowest ;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;highest = parseInt(highest / 10);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;lowest  = parseInt(lowest  / 10);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;r_multiply = multiply;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;multiply *= 10;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;highest  = (r_highest + 1) * r_multiply;&#xA;&#x9;&#x9;&#x9;&#x9;lowest   = (r_lowest     ) * r_multiply;&#xA;&#x9;&#x9;&#x9;&#x9;multiply = r_multiply;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;// 기록&#xA;&#x9;&#x9;&#x9;&#x9;serieses.grid.highest = highest;&#xA;&#x9;&#x9;&#x9;&#x9;serieses.grid.lowest  = lowest;&#xA;&#x9;&#x9;&#x9;&#x9;serieses.grid.multiply= multiply;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;// 각달의 첫째날을 구해온다&#xA;&#x9;&#x9;&#x9;&#x9;for(var i=s; i &lt; dat.length-1 &amp;&amp; i &lt;= e-1; i++){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var curr_dt = dat[i].date;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var prev_dt = dat[i+1].date;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(curr_dt.substr(4,2) != prev_dt.substr(4,2)){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;serieses.grid.base_dt[i] = {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;date: curr_dt.substr(0,4)+&#39;.&#39;+curr_dt.substr(4,2)+&#39;.&#39;+curr_dt.substr(6,2),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;x: (1.0 / (e - s + 1))*(i-s)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;};&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}else{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;serieses.grid.base_dt[i] = null;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;},&#xA;&#x9;&#x9;&#x9;// 캔들가격 로더&#xA;&#x9;&#x9;&#x9;function(serieses, s, e, dat){&#xA;&#x9;&#x9;&#x9;&#x9;//console.log(&#39;assa_chart2 [LOAD] : candle prices&#39;);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;var highest = serieses.grid.highest;&#xA;&#x9;&#x9;&#x9;&#x9;var lowest  = serieses.grid.lowest ;&#xA;&#x9;&#x9;&#x9;&#x9;var wrate = 0.6;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;for(var i=s; i &lt; dat.length &amp;&amp; i &lt;= e; i++){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// 캔들 가격 정규화&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;serieses.price[i] = {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;lx : (1.0 / (e - s + 1))*((i-s) + (1.0 - wrate)*0.5),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;rx : (1.0 / (e - s + 1))*((i-s) + (1.0 + wrate)*0.5),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;oy: (dat[i].open  - lowest) / (highest - lowest),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;hy: (dat[i].high  - lowest) / (highest - lowest),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ly: (dat[i].low   - lowest) / (highest - lowest),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;cy: (dat[i].close - lowest) / (highest - lowest)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}; &#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;},&#xA;&#x9;&#x9;&#x9;// 거래량 로더&#xA;&#x9;&#x9;&#x9;function(serieses, s, e, dat ){&#xA;&#x9;&#x9;&#x9;&#x9;//console.log(&#39;assa_chart2 [LOAD] : volumes&#39;);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;var avg_vol = 0;&#xA;&#x9;&#x9;&#x9;&#x9;var low_vol = 999999999999;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;// 가장 작은 거래량과 평균거래량을 구한다&#xA;&#x9;&#x9;&#x9;&#x9;for(var i=s; i &lt; dat.length &amp;&amp; i &lt;= e; i++){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(low_vol &gt; dat[i].vol){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;low_vol = dat[i].vol;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;avg_vol += dat[i].vol / ( e -s + 1);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;// 가장 작은 거래량을 1로 평균을 3으로 &#xA;&#x9;&#x9;&#x9;&#x9;var m_vol = (avg_vol - low_vol) / 3;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;for(var i=s; i &lt; dat.length &amp;&amp; i &lt;= e; i++){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;serieses.volume[i] = parseInt((dat[i].vol-low_vol) / m_vol)+1;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;],&#xA;&#xA;&#xA;&#xA;&#x9;&#x9;// 그리는 프로그램 들&#xA;&#x9;&#x9;render_programs : [&#xA;&#xA;&#x9;&#x9;&#x9;// 그리드 렌더&#xA;&#x9;&#x9;&#x9;function(serieses, s, e, themes, layouts, ctx){&#xA;&#x9;&#x9;&#x9;&#x9;//console.log(&#39;assa_chart2 [RENDER] : grid&#39;);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;// 가로선 긋기&#xA;&#x9;&#x9;&#x9;&#x9;var floor = parseInt(serieses.grid.lowest /serieses.grid.multiply);&#xA;&#x9;&#x9;&#x9;&#x9;var cap   = parseInt(serieses.grid.highest/serieses.grid.multiply);&#xA;&#x9;&#x9;&#x9;&#x9;var step  = Math.round((cap - floor) / 5);&#xA;&#x9;&#x9;&#x9;&#x9;var hv = floor;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;while(hv &lt; cap){&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var ax = 1.0 * layouts[0].w + layouts[0].x;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var bx = 0.0 * layouts[0].w + layouts[0].x;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var ay = (1.0 - ((hv - floor) / (cap - floor))) * layouts[0].h + layouts[0].y&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.beginPath();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.moveTo(ax, ay);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.lineTo(bx, ay);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.lineWidth = 0.8;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(ctx.setLineDash)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.setLineDash([1,2]);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.strokeStyle = themes[&#39;grid-line&#39;];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.stroke();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(ctx.setLineDash)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.setLineDash([1,0]);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var txt = &#39;&#39; + hv * serieses.grid.multiply;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.beginPath();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.textAlign = &#39;left&#39;;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.textBaseline = &#39;middle&#39;;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.fillStyle = themes[&#39;grid-line&#39;];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.fillText(txt, ax+12, ay);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;hv += step;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;// 세로선 긋기 (날짜 date 20130609)&#xA;&#x9;&#x9;&#x9;&#x9;for(var i=s; i &lt; serieses.price.length-1 &amp;&amp; i &lt;= e-1; i++){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(serieses.grid.base_dt[i] != null){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var ay = 0.0 * layouts[0].h + layouts[0].y;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var by = 1.0 * layouts[0].h + layouts[0].y;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var ax = (1.0 - serieses.grid.base_dt[i].x) * layouts[0].w + layouts[0].x;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.beginPath();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.moveTo(ax, ay);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.lineTo(ax, by);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.lineWidth = 0.8;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(ctx.setLineDash)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.setLineDash([1,2]);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.strokeStyle = themes[&#39;grid-line&#39;];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.stroke();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(ctx.setLineDash)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.setLineDash([1,0]);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.textBaseline = &#39;top&#39;;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.textAlign = &#39;center&#39;;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.fillStyle = themes[&#39;grid-line&#39;];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.fillText(serieses.grid.base_dt[i].date, ax, by+12);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;},&#xA;&#x9;&#x9;&#x9;// 캔들 렌더&#xA;&#x9;&#x9;&#x9;function(serieses, s, e, themes, layouts, ctx){&#xA;&#x9;&#x9;&#x9;&#x9;//console.log(&#39;assa_chart2 [RENDER] : candle chart &#39;);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;// x coord transform&#xA;&#x9;&#x9;&#x9;&#x9;// &#x9;&#x9;(1.0 - x) =&gt; mirror &#xA;&#x9;&#x9;&#x9;&#x9;// &#x9;&#x9;* layout.w =&gt; scale &#xA;&#x9;&#x9;&#x9;&#x9;// &#x9;&#x9;+ layout.x =&gt; translation&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;var arr = serieses.price;&#xA;&#x9;&#x9;&#x9;&#x9;var vol = serieses.volume;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;for(var i=s; i &lt; arr.length &amp;&amp; i &lt;= e; i++){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// 하나의 캔들 그리기&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var candle = arr[i];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var level  = (vol[i]) * (Math.random() + 0.3)+2;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// 색깔지정&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var color = (candle.oy &lt;= candle.cy) ? &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;themes[&#39;up&#39;] : themes[&#39;down&#39;];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var scolor= (candle.oy &lt;= candle.cy) ? &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;themes[&#39;up-shadow&#39;] : themes[&#39;down-shadow&#39;];&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// 좌표 변환&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var lx = (1.0 - candle.lx) * layouts[0].w + layouts[0].x;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var rx = (1.0 - candle.rx) * layouts[0].w + layouts[0].x;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var oy = (1.0 - candle.oy) * layouts[0].h + layouts[0].y;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var hy = (1.0 - candle.hy) * layouts[0].h + layouts[0].y;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var ly = (1.0 - candle.ly) * layouts[0].h + layouts[0].y;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var cy = (1.0 - candle.cy) * layouts[0].h + layouts[0].y;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// 고가-저가의 선을 그린다&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var mx = (lx + rx) * 0.5;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.beginPath();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.moveTo(mx, ly);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.lineTo(mx, (oy &gt; cy) ? oy : cy);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.strokeStyle = color;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.shadowBlur = 0;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// 밝기 레벨에 따라서 강조&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;for(var j=0; j &lt; level; j++){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.stroke();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.beginPath();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.moveTo(mx, hy);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.lineTo(mx, (cy &gt; oy) ? oy : cy);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.strokeStyle = color;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// 밝기 레벨에 따라서 강조&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;for(var j=0; j &lt; level; j++){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.stroke();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// 몸통을 그린다&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.beginPath();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.rect( (lx&gt;rx)?rx:lx&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, (oy&gt;cy)?cy:oy&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, Math.abs(lx - rx)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, Math.abs(oy - cy)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.shadowColor = scolor;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.shadowBlur = parseInt(Math.abs(lx - rx) *3);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.fillStyle = color;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// 밝기 레벨에 따라서 강조&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;for(var j=0; j &lt; level; j++){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.fill();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.strokeStyle = color;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.stroke();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ctx.closePath();&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;]&#xA;&#xA;&#xA;&#x9;};&#xA;&#xA;// custom &#xA;// moving average 5&#xA;ASSA_Chart2.load_programs.push(function(serieses, s, e, dat){&#xA;&#x9;serieses[&#39;ma5&#39;] = new Array();&#xA;&#xA;&#x9;for(var i=s; i &lt; dat.length-5 &amp;&amp; i &lt;= e-5; i++){&#xA;&#x9;&#x9;serieses.ma5[i] = {&#xA;&#x9;&#x9;&#x9;x: (1.0 / (e - s + 1)) * (i-s),&#xA;&#x9;&#x9;&#x9;y: ( serieses.price[i+0].cy&#xA;&#x9;&#x9;&#x9;&#x9;+serieses.price[i+1].cy&#xA;&#x9;&#x9;&#x9;&#x9;+serieses.price[i+2].cy&#xA;&#x9;&#x9;&#x9;&#x9;+serieses.price[i+3].cy&#xA;&#x9;&#x9;&#x9;&#x9;+serieses.price[i+4].cy ) /5&#xA;&#x9;&#x9;};&#xA;&#x9;}&#xA;});&#xA;ASSA_Chart2.render_programs.push(function(serieses, s, e, themes, layouts, ctx){&#xA;&#xA;&#x9;for(var i=s; i &lt; serieses.price.length-6 &amp;&amp; i &lt;= e-6; i++){&#xA;&#x9;&#x9;var ax = (1.0 - serieses.ma5[i].x) * layouts[0].w + layouts[0].x;&#xA;&#x9;&#x9;var ay = (1.0 - serieses.ma5[i].y) * layouts[0].h + layouts[0].y;&#xA;&#x9;&#x9;var bx = (1.0 - serieses.ma5[i+1].x) * layouts[0].w + layouts[0].x;&#xA;&#x9;&#x9;var by = (1.0 - serieses.ma5[i+1].y) * layouts[0].h + layouts[0].y;&#xA;&#xA;&#x9;&#x9;ctx.beginPath();&#xA;&#x9;&#x9;ctx.moveTo(ax, ay);&#xA;&#x9;&#x9;ctx.lineTo(bx, by);&#xA;&#x9;&#x9;ctx.strokeStyle = &#39;rgba(255,255,0,0.6)&#39;;&#xA;&#x9;&#x9;ctx.lineWidth = 2;&#xA;&#x9;&#x9;ctx.stroke();&#xA;&#xA;&#x9;}&#xA;});&#xA;&#xA;// &#xA;&#xA;function stock_process(s, mu, vol, t, n){&#xA;&#xA;&#x9;this.s   = s || 100.0;&#xA;&#x9;this.mu  = mu|| 0.1;&#xA;&#x9;this.vol = vol || 0.3;&#xA;&#x9;this.t   = t || 1.0;&#xA;&#x9;this.n   = n || 365;&#xA;&#xA;&#x9;this.date = new Date();&#xA;&#xA;&#x9;function clip_data(dat){&#xA;&#x9;&#x9;if(dat &gt; 0.15)&#xA;&#x9;&#x9;&#x9;return 0.15;&#xA;&#x9;&#x9;else if (dat &lt; -0.15)&#xA;&#x9;&#x9;&#x9;return -0.15;&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;return dat;&#xA;&#x9;}&#xA;&#x9;this.randRate =  function(){&#xA; &#x9;&#xA;&#x9;&#x9;// box-muller method&#xA;&#x9;    /*&#xA;&#x9;     var x1, x2, w;&#xA;&#x9;     do{&#xA;&#x9;     &#x9;x1 = 2 * Math.random() - 1;&#xA;&#x9;     &#x9;x2 = 2 * Math.random() - 1;&#xA;&#x9;     &#x9;w  = x1 * x1 + x2 * x2;&#xA;&#x9;     }while( w &gt;= 1 || w == 0);&#xA;&#x9;     w = Math.sqrt((-2.0 * Math.log(w)) / w);&#xA;&#xA;&#x9;     var u1 = 1.0 * x1 * w;&#xA;&#x9;&#x9;*/&#xA;&#xA;&#x9;    var x1 = Math.random();&#xA;&#x9;    var x2 = Math.random();&#xA;&#xA;&#x9;    var u1 = Math.sqrt(-2 * Math.log(x1)) &#xA;&#x9;            * Math.cos(2 * Math.PI * x2);&#xA;&#x9;    var u2 = Math.sqrt(-2 * Math.log(x1)) &#xA;&#x9;            * Math.sin(2 * Math.PI * x2);&#xA;&#xA;&#x9;&#x9;var dt = this.t / this.n;&#xA;&#xA;&#x9;&#x9;return clip_data(this.mu * dt + this.vol * u1 * Math.sqrt(dt));&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;this._prevS = 0;&#xA;&#xA;&#x9;this.init = function(){&#xA;&#x9;&#x9;this._prevS = this.s;&#xA;&#xA;&#x9;}&#xA;&#x9;this.getPrice = function(){&#xA;&#x9;&#x9;var arr = [];&#xA;&#x9;&#x9;for(var i=0; i &lt; 3; i++){&#xA;&#x9;&#x9;&#x9;//console.log(&#39;randr&#39; + randRate());&#xA;&#x9;&#x9;&#x9;arr[i] = this._prevS + this._prevS * this.randRate();&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;var close = arr[0];&#xA;&#xA;&#x9;&#x9;arr.sort();&#xA;&#x9;&#x9;var ret = {&#xA;&#x9;&#x9;&#x9;vol : parseInt(Math.random()*10000),&#xA;&#x9;&#x9;&#x9;open : this._prevS,&#xA;&#x9;&#x9;&#x9;high : arr[2],&#xA;&#x9;&#x9;&#x9;low  : arr[0],&#xA;&#x9;&#x9;&#x9;close: close,&#xA;&#x9;&#x9;&#x9;date: &#34;20130921&#34;&#xA;&#x9;&#x9;};&#xA;&#x9;    &#xA;&#x9;    this._prevS =  this._prevS + this._prevS * this.randRate();&#xA;&#x9;&#x9;return ret;&#xA;&#x9;}&#xA;&#x9;this.getPricePath = function(){&#xA;&#x9;&#x9;var ret = new Array(this.n);&#xA;&#xA;&#x9;&#x9;for(var i=0; i &lt; this.n; i++){&#xA;&#x9;&#x9;&#x9;ret[i] = this.getPrice();&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return ret;&#xA;&#x9;}&#xA;&#xA;}&#xA;&#xA;var stock_path = document.getElementById(&#39;stock_path&#39;);&#xA;&#xA;ASSA_Chart2.init(stock_path, 660, 420);&#xA;var sp = new stock_process(5000);&#xA;sp.init();&#xA;var ppath = sp.getPricePath().reverse();&#xA;&#xA;setInterval(function(){&#xA;&#x9;ASSA_Chart2.render(ppath, 300, 364);&#x9;&#xA;}, 1000/6);&#xA;&#xA;&#xA;&#xA;&lt;/script&gt;&#xA;&#xA;&lt;p&gt;이전 블로그 내용 백업&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gaussian_Random</title>
      <link>http://localhost:1313/posts/gaussian_random/</link>
      <pubDate>Tue, 06 Aug 2013 23:55:58 +0900</pubDate>
      <guid>http://localhost:1313/posts/gaussian_random/</guid>
      <description>&lt;canvas id=&#34;normal_dist_canvas&#34; width=&#34;660&#34; height=&#34;480&#34;&gt;&lt;/canvas&gt;&#xA;&#x9;&lt;script type=&#34;text/javascript&#34;&gt;&#xA;&#x9;&#x9;var normal_dist_canvas = document.getElementById(&#39;normal_dist_canvas&#39;);&#xA;&#x9;&#x9;var normal_dist_ctx = normal_dist_canvas.getContext(&#39;2d&#39;);&#xA;&#xA;&#x9;&#x9;function box_muller_generator(){&#xA;&#x9;&#x9;&#x9;var x1 = Math.random();&#xA;&#x9;&#x9;&#x9;var x2 = Math.random();&#xA;&#xA;&#x9;&#x9;&#x9;var u1 = Math.sqrt(-2 * Math.log(x1)) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;* Math.cos( Math.PI * x2);&#xA;&#x9;&#x9;&#x9;var u2 = Math.sqrt(-2 * Math.log(x1)) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;* Math.sin( Math.PI * x2);&#xA;&#x9;&#x9;&#x9;return u1;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;function normal_dist_draw_line(x1,y1, x2,y2){&#xA;&#x9;&#x9;&#x9;normal_dist_ctx.beginPath();&#xA;&#x9;&#x9;&#x9;normal_dist_ctx.moveTo(x1,y1);&#xA;&#x9;&#x9;&#x9;normal_dist_ctx.lineTo(x2, y2);&#xA;&#x9;&#x9;&#x9;normal_dist_ctx.strokeStyle = &#39;#000000&#39;;&#xA;&#x9;&#x9;&#x9;normal_dist_ctx.stroke();&#xA;&#x9;&#x9;&#x9;normal_dist_ctx.closePath();&#x9;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;function normal_dist_draw_txt(txt, x, y){&#xA;&#x9;&#x9;&#x9;normal_dist_ctx.textBaseline = &#39;top&#39;;&#xA;&#x9;&#x9;&#x9;normal_dist_ctx.textAlign = &#39;center&#39;;&#xA;&#x9;&#x9;&#x9;normal_dist_ctx.fillText(txt, x, y);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;// initialize&#xA;&#x9;&#x9;var normal_dist_slice = new Array(60);&#xA;&#x9;&#x9;for(var i=0; i &lt; normal_dist_slice.length; i++){&#xA;&#x9;&#x9;&#x9;normal_dist_slice[i] = 0;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;var normal_dist_cnt = 0;&#xA;&#xA;&#xA;&#xA;&#x9;&#x9;setInterval(function(){&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;// gen numbers&#xA;&#x9;&#x9;&#x9;for(var i=0; i &lt; 25; i++){&#xA;&#x9;&#x9;&#x9;&#x9;var rnd = box_muller_generator();&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;var bottom = -3;&#xA;&#x9;&#x9;&#x9;&#x9;var top    = 3;&#xA;&#x9;&#x9;&#x9;&#x9;var step = (top - bottom) / normal_dist_slice.length;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;for(var j=0; j &lt; normal_dist_slice.length; j++){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var from = step * j     + bottom;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;var to   = step * (j+1) + bottom;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(rnd &gt;= from &amp;&amp; rnd &lt; to){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;normal_dist_slice[j]++;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;// draw&#xA;&#x9;&#x9;&#x9;normal_dist_canvas.width = normal_dist_canvas.width;&#xA;&#xA;&#x9;&#x9;&#x9;for(var i=0; i &lt; normal_dist_slice.length-1; i++){&#xA;&#x9;&#x9;&#x9;&#x9;var width = normal_dist_canvas.width;&#xA;&#x9;&#x9;&#x9;&#x9;var height= normal_dist_canvas.height;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;var x = width * 0.1;&#xA;&#x9;&#x9;&#x9;&#x9;var y = height* 0.9;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;normal_dist_draw_line(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;x + (width*0.8/normal_dist_slice.length)*i    , y - normal_dist_slice[i],&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;x + (width*0.8/normal_dist_slice.length)*(i+1), y - normal_dist_slice[i+1]&#xA;&#x9;&#x9;&#x9;&#x9;);&#xA;&#x9;&#x9;&#x9;&#x9;normal_dist_draw_line(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;x + (width*0.8/normal_dist_slice.length)*i    , y - normal_dist_slice[i],&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;x + (width*0.8/normal_dist_slice.length)*(i), y &#xA;&#x9;&#x9;&#x9;&#x9;);&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;normal_dist_draw_txt(&#39;-3&#39;, width*0.1, height*0.9);&#xA;&#x9;&#x9;&#x9;normal_dist_draw_txt(&#39;0&#39;, width*0.5, height*0.9);&#xA;&#x9;&#x9;&#x9;normal_dist_draw_txt(&#39;3&#39;, width*0.885, height*0.9);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;normal_dist_cnt++;&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;// clear&#xA;&#x9;&#x9;&#x9;if(normal_dist_cnt == 240){&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;// clear&#xA;&#x9;&#x9;&#x9;&#x9;for(var i=0; i &lt; normal_dist_slice.length; i++){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;normal_dist_slice[i] = 0;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;normal_dist_cnt = 0;&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;}, 1000/60);&#xA;&#xA;&#x9;&lt;/script&gt;&#xA;&#xA;&lt;p&gt;이전 블로그 내용 백업&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cut_Water</title>
      <link>http://localhost:1313/posts/cut_water/</link>
      <pubDate>Sun, 21 Jul 2013 00:10:41 +0900</pubDate>
      <guid>http://localhost:1313/posts/cut_water/</guid>
      <description>&lt;p&gt;사랑싸움은 칼로 물베기&lt;/p&gt;&#xA;&#xA;&lt;canvas id=&#34;cut_water_canvas&#34; width=&#34;660&#34; height=&#34;480&#34;&gt;&lt;/canvas&gt;&#xA;&lt;script&gt;&#xA;cut_water = {&#xA;&#x9;init: function(canvasElem){&#xA;&#x9;&#x9;this.canvas = canvasElem;&#xA;&#x9;&#x9;this.ctx = canvasElem.getContext(&#39;2d&#39;);&#xA;&#x9;&#x9;this.w = canvasElem.width;&#xA;&#x9;&#x9;this.h = canvasElem.height;&#xA;&#xA;&#x9;&#x9;this.points = [];&#xA;&#xA;&#x9;&#x9;// set sensitiviy&#xA;&#x9;&#x9;this.sensitivity = 1.2;&#xA;&#xA;&#x9;&#x9;this.mouseX = 0;&#xA;&#x9;&#x9;this.mouseY = 0;&#xA;&#xA;&#x9;&#x9;var xstep = 6;&#xA;&#x9;&#x9;var ystep = 12;&#xA;&#xA;&#x9;&#x9;console.log(this.w + &#34;, &#34; +this.h)&#xA;&#xA;&#x9;&#x9;var heart_str = new Array(23);&#xA;&#xA;&#x9;&#x9;heart_str[0 ] = &#34;        ...e$e.$...e$                 ...e$e.$...e        &#34;;&#xA;&#x9;&#x9;heart_str[1 ] = &#34;     !$6lkasd!$6lkasd!$6l          !$6lkasd!$6lkasd!      &#34;;&#xA;&#x9;&#x9;heart_str[2 ] = &#34;   ;,a1wert;,a1wert;,a1wert     ;,a1wert;,a1wert;,a1we    &#34;;&#xA;&#x9;&#x9;heart_str[3 ] = &#34; .asxzcvb.asxzcvb.asxzcvb.as   .asxzcvb.asxzcvb.asxzcvb.  &#34;;&#xA;&#x9;&#x9;heart_str[4 ] = &#34;1qaswedfqas1wedfqas1wedfqas1wedfqas1wedfqas1edfqas1ewdfqa &#34;;&#xA;&#x9;&#x9;heart_str[5 ] = &#34;:lkjhgfdlkj:hgfdlkj:hgfdlkj:hgfdlkj:hgfdlkj:gfdhlkj:gfdhlk&#34;;&#xA;&#x9;&#x9;heart_str[6 ] = &#34;3edcvfr4edc3vfr4edc3vfr4edc3vfr4edc3vfr4edc3fr4vedc3fr4ved&#34;;&#xA;&#x9;&#x9;heart_str[7 ] = &#34;1234ewqa2341ewqa2341ewqa2341ewqa2341ewqa2341wqa2341weqa234&#34;;&#xA;&#x9;&#x9;heart_str[8 ] = &#34;o[piuytr[piouytr[piouytr[piouytr[piouytr[pioytru[pioytru[p&#34;;&#xA;&#x9;&#x9;heart_str[9 ] = &#34;z/xcvbnm/xczvbnm/xczvbnm/xczvbnm/xczvbnm/xczbnmv/xczbnmv/x&#34;;&#xA;&#x9;&#x9;heart_str[10] = &#34; `1qazxs`1qazxs`1wqazs`1wqazxs`1qazwxs1qa`zws1qa`zwsx1qa` &#34;;&#xA;&#x9;&#x9;heart_str[11] = &#34;  mznxbcvfmznxbcvfmzxbcnvfzxbmcnfzxvbmnfzcxvbmnfzcxvbmnf  &#34;;&#xA;&#x9;&#x9;heart_str[12] = &#34;   %t^y&amp;ujm%t^y&amp;ujm%^y&amp;tuj%^ym&amp;tu%^yj&amp;tum%^yj&amp;tum%^yj&amp;t   &#34;;&#xA;&#x9;&#x9;heart_str[13] = &#34;     )oiuytre)oiuytr)oieuyr)otieur)oyieutr)oyieutr)oyi    &#34;;&#xA;&#x9;&#x9;heart_str[14] = &#34;      z.xcvgy7z.xcvg7z.yxcg7zv.yxc7zv.ygxc7zv.ygxc7z      &#34;;&#xA;&#x9;&#x9;heart_str[15] = &#34;        q[wertyuq[weryuq[wertyuq[wetyurq[wetyurq[w        &#34;;&#xA;&#x9;&#x9;heart_str[16] = &#34;           a;sdfghja;sdfghja;sdfghja;sdfghja;sdf          &#34;;&#xA;&#x9;&#x9;heart_str[17] = &#34;              qmprootiqmprootimprootqimproot              &#34;;&#xA;&#x9;&#x9;heart_str[18] = &#34;                 mtu1qaz@mtu1qa@mtuz1qa@m                 &#34;;&#xA;&#x9;&#x9;heart_str[19] = &#34;                    !qwe$rty!qwe$rty!q                    &#34;;&#xA;&#x9;&#x9;heart_str[20] = &#34;                       -p=oiuyt-p=o                       &#34;;&#xA;&#x9;&#x9;heart_str[21] = &#34;                           asdfg                          &#34;;&#xA;&#x9;&#x9;heart_str[22] = &#34;                             l                            &#34;;&#xA;&#xA;&#x9;&#x9;// set points heart shape&#xA;&#x9;&#x9;var colors = [&#39;#A3A692&#39;,&#39;#F2C288&#39;,&#39;#F2AD85&#39;,&#39;#F2887E&#39;,&#39;#F25757&#39;,&#39;#F25757&#39;];&#xA;&#xA;&#xA;&#x9;&#x9;for(var i=0; i &lt; heart_str.length; i++){&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;var str = heart_str[i];&#xA;&#xA;&#x9;&#x9;&#x9;for(var j=0; j &lt; str.length; j++){&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;var x = (this.w/2 - xstep*str.length/2) + xstep * j;&#xA;&#x9;&#x9;&#x9;&#x9;var y = (this.h/2 - ystep*heart_str.length/2) + ystep * i;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;if(str.substr(j,1) != &#34; &#34;){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.points.push({&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ox: x,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;oy: y,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;x: x,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;y: y,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;color: colors[parseInt(Math.random() * colors.length)]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;});&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;this.canvas.addEventListener(&#39;mousemove&#39;, this.mouse_move, false);&#xA;&#x9;},&#xA;&#x9;mouse_move: function(e){&#xA;&#x9;&#x9;cut_water.mouseX = e.offsetX || e.pageX - cut_water.canvas.parentNode.offsetLeft;&#xA;&#x9;&#x9;cut_water.mouseY = e.offsetY || e.pageY - cut_water.canvas.parentNode.offsetTop;&#xA;&#xA;&#x9;},&#xA;&#x9;update_points: function(){&#xA;&#x9;&#x9;for(var i=0; i &lt; this.points.length; i++){&#xA;&#x9;&#x9;&#x9;var pnt = this.points[i];&#xA;&#x9;&#x9;&#x9;var theta = Math.atan2(pnt.y - this.mouseY, pnt.x - this.mouseX&#x9;&#x9;&#x9;);&#xA;&#x9;&#x9;&#x9;var amtX = this.mouseX - pnt.x;&#xA;&#x9;&#x9;&#x9;var amtY = this.mouseY - pnt.y;&#xA;&#x9;&#x9;&#x9;var distance = Math.min( this.sensitivity * 100 / &#xA;&#x9;&#x9;&#x9;      Math.sqrt(amtX*amtX + amtY*amtY) , 130);&#xA;&#xA;&#x9;&#x9;&#x9;pnt.x += Math.cos(theta) * distance &#xA;&#x9;&#x9;&#x9;&#x9;+ (pnt.ox - pnt.x)*0.05;&#xA;&#x9;&#x9;&#x9;pnt.y += Math.sin(theta) * distance &#xA;&#x9;&#x9;&#x9;&#x9;+ (pnt.oy - pnt.y)*0.05;&#xA;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;},&#xA;&#x9;draw_points: function(){&#xA;&#x9;&#x9;for(var i=0; i &lt; this.points.length; i++){&#xA;&#x9;&#x9;&#x9;var pnt = this.points[i];&#xA;&#x9;&#x9;&#x9;this.draw_point(pnt.x, pnt.y, pnt.color);&#xA;&#x9;&#x9;}&#xA;&#x9;},&#xA;&#x9;draw_point: function(x,y, color){&#xA;&#x9;&#x9;this.ctx.fillStyle = color;&#xA;&#x9;&#x9;this.ctx.beginPath();&#xA;&#x9;&#x9;//this.ctx.arc(x, y, 3, 0, Math.PI*2, true);&#xA;&#x9;&#x9;this.ctx.rect(x,y,4,8);&#xA;&#x9;&#x9;this.ctx.closePath();&#xA;&#x9;&#x9;this.ctx.fill();&#x9;&#x9;&#xA;&#x9;},&#xA;&#x9;draw: function(){&#xA;&#x9;&#x9;this.canvas.width = this.canvas.width;&#xA;&#x9;&#x9;this.draw_points();&#xA;&#x9;&#x9;this.update_points();&#xA;&#x9;}&#xA;&#xA;};&#xA;var cut_water_canvas= document.getElementById(&#39;cut_water_canvas&#39;);&#xA;cut_water.init(cut_water_canvas);&#xA;setInterval(function(){&#xA;&#x9;cut_water.draw();&#xA;}, 1000/60);&#xA;&lt;/script&gt;</description>
    </item>
  </channel>
</rss>
